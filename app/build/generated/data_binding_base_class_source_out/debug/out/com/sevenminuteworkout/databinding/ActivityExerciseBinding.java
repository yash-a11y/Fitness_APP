// Generated by view binder compiler. Do not edit!
package com.sevenminuteworkout.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.sevenminuteworkout.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityExerciseBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView TVCurr;

  @NonNull
  public final FrameLayout activityFf;

  @NonNull
  public final FrameLayout exerciseFf;

  @NonNull
  public final ImageView imgviewEx;

  @NonNull
  public final TextView labelupcoming;

  @NonNull
  public final LinearLayout llRestView;

  @NonNull
  public final RecyclerView rcyl;

  @NonNull
  public final Toolbar toolbarExerciseActivity;

  @NonNull
  public final TextView tvExName;

  @NonNull
  public final ProgressBar tvProgressBar;

  @NonNull
  public final ProgressBar tvProgressBarExe;

  @NonNull
  public final TextView tvTimer;

  @NonNull
  public final TextView tvTimerExe;

  @NonNull
  public final TextView upcoming;

  private ActivityExerciseBinding(@NonNull ConstraintLayout rootView, @NonNull TextView TVCurr,
      @NonNull FrameLayout activityFf, @NonNull FrameLayout exerciseFf,
      @NonNull ImageView imgviewEx, @NonNull TextView labelupcoming,
      @NonNull LinearLayout llRestView, @NonNull RecyclerView rcyl,
      @NonNull Toolbar toolbarExerciseActivity, @NonNull TextView tvExName,
      @NonNull ProgressBar tvProgressBar, @NonNull ProgressBar tvProgressBarExe,
      @NonNull TextView tvTimer, @NonNull TextView tvTimerExe, @NonNull TextView upcoming) {
    this.rootView = rootView;
    this.TVCurr = TVCurr;
    this.activityFf = activityFf;
    this.exerciseFf = exerciseFf;
    this.imgviewEx = imgviewEx;
    this.labelupcoming = labelupcoming;
    this.llRestView = llRestView;
    this.rcyl = rcyl;
    this.toolbarExerciseActivity = toolbarExerciseActivity;
    this.tvExName = tvExName;
    this.tvProgressBar = tvProgressBar;
    this.tvProgressBarExe = tvProgressBarExe;
    this.tvTimer = tvTimer;
    this.tvTimerExe = tvTimerExe;
    this.upcoming = upcoming;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityExerciseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityExerciseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_exercise, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityExerciseBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.TV_curr;
      TextView TVCurr = ViewBindings.findChildViewById(rootView, id);
      if (TVCurr == null) {
        break missingId;
      }

      id = R.id.activity_ff;
      FrameLayout activityFf = ViewBindings.findChildViewById(rootView, id);
      if (activityFf == null) {
        break missingId;
      }

      id = R.id.exercise_ff;
      FrameLayout exerciseFf = ViewBindings.findChildViewById(rootView, id);
      if (exerciseFf == null) {
        break missingId;
      }

      id = R.id.imgview_ex;
      ImageView imgviewEx = ViewBindings.findChildViewById(rootView, id);
      if (imgviewEx == null) {
        break missingId;
      }

      id = R.id.labelupcoming;
      TextView labelupcoming = ViewBindings.findChildViewById(rootView, id);
      if (labelupcoming == null) {
        break missingId;
      }

      id = R.id.llRestView;
      LinearLayout llRestView = ViewBindings.findChildViewById(rootView, id);
      if (llRestView == null) {
        break missingId;
      }

      id = R.id.rcyl;
      RecyclerView rcyl = ViewBindings.findChildViewById(rootView, id);
      if (rcyl == null) {
        break missingId;
      }

      id = R.id.toolbar_exercise_activity;
      Toolbar toolbarExerciseActivity = ViewBindings.findChildViewById(rootView, id);
      if (toolbarExerciseActivity == null) {
        break missingId;
      }

      id = R.id.tv_ex_name;
      TextView tvExName = ViewBindings.findChildViewById(rootView, id);
      if (tvExName == null) {
        break missingId;
      }

      id = R.id.tv_progressBar;
      ProgressBar tvProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (tvProgressBar == null) {
        break missingId;
      }

      id = R.id.tv_progressBar_exe;
      ProgressBar tvProgressBarExe = ViewBindings.findChildViewById(rootView, id);
      if (tvProgressBarExe == null) {
        break missingId;
      }

      id = R.id.tvTimer;
      TextView tvTimer = ViewBindings.findChildViewById(rootView, id);
      if (tvTimer == null) {
        break missingId;
      }

      id = R.id.tvTimer_exe;
      TextView tvTimerExe = ViewBindings.findChildViewById(rootView, id);
      if (tvTimerExe == null) {
        break missingId;
      }

      id = R.id.upcoming;
      TextView upcoming = ViewBindings.findChildViewById(rootView, id);
      if (upcoming == null) {
        break missingId;
      }

      return new ActivityExerciseBinding((ConstraintLayout) rootView, TVCurr, activityFf,
          exerciseFf, imgviewEx, labelupcoming, llRestView, rcyl, toolbarExerciseActivity, tvExName,
          tvProgressBar, tvProgressBarExe, tvTimer, tvTimerExe, upcoming);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
